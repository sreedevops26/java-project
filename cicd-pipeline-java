pipeline
{
agent any
stages
{
stage('Checkout SCM')
{
steps
{
git credentialsId: 'github-creds', url: 'https://github.com/sreedevops26/java-project.git'
}
}
stage('build code from maven')
{
steps
{
 sh 'mvn install'
}
}
stage('create artifacts as docker image')
{
steps
{
sh 'docker build -t sreedevops26/nginx:myproj1.0 -f myproj-dockerfile .'
}
}
stage('push newly created image into docker registry')
{
steps
{
withDockerRegistry([credentialsId: 'docker-reg-creds', url: 'https://index.docker.io/v1/']) 
{
    sh 'docker push sreedevops26/nginx:myproj1.0'
}
}
}
stage('execute ansible playbook on dev env')
{
steps
{
script
{
if("${params.select_env}" == "dev")
{
ansiblePlaybook credentialsId: 'infra-server-creds', installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/main-cicd-project/deploy.yml', skippedTags: 'qa, prod'
}
}
}
}
stage('execute ansible playbook on qa env')
{
steps
{
script
{
if("${params.select_env}" == "qa")
{
ansiblePlaybook credentialsId: 'infra-server-creds', installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/main-cicd-project/deploy.yml', skippedTags: 'dev, prod'
}
}
}
}
stage('execute ansible playbook on prod env')
{
steps
{
script
{
if("${params.select_env}" == "prod")
{
ansiblePlaybook credentialsId: 'infra-server-creds', installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/main-cicd-project/deploy.yml', skippedTags: 'dev, qa'
}
}
}
}
}
}


